[gd_scene load_steps=5 format=3 uid="uid://bq32hhiqqrf85"]

[ext_resource type="Texture2D" uid="uid://b8w8gc2acnbho" path="res://Game/Features/Player/Sprites/Player.png" id="1_jnqgf"]
[ext_resource type="Texture2D" uid="uid://6kb7xl4ivjqu" path="res://Game/Sprites/PointLight.png" id="2_i2o11"]

[sub_resource type="GDScript" id="GDScript_bf3k3"]
script/source = "extends CharacterBody2D

@export var speed = 200
@export var rotation_speed = 200
var timer = 0
var is_hang_and_float = false
var angle = 0
var wall_tiles = []
var mining_position = Vector2()
@onready var tilemap = get_node(\"../TileMap\")
@onready var cell_size = tilemap.tile_set.tile_size

func _physics_process(delta):
	# Get direction
	var mouse_pos = get_global_mouse_position()
	var direction = mouse_pos - get_global_position()

	# Calculate the angle between player and mouse
	angle = direction.angle()
	angle = lerp_angle(rotation, angle, 0.1)
	rotation = angle

	if Input.is_action_pressed(\"hang_and_float\"):
		# If space is pressed float the player up and down like a wave
		timer += delta * 7
		is_hang_and_float = true
		position.y += sin(timer) / 2
		# get player position in tilemap
		var tile_pos = tilemap.local_to_map(mining_position)
		wall_tiles = tilemap.get_wall_tiles_near_global_position(4,tile_pos)
		return
	# Use smooth movement with interpolation
	position = position.lerp(mouse_pos, 0.01)
	mining_position = Vector2(position.x, position.y)
	wall_tiles = []
	# Update player position
	timer = 0
	is_hang_and_float = false
	move_and_slide()

# Public func to get the angle
func get_angle():
	return angle
# Public func to get is_hang_and_float
func get_is_hang_and_float():
	return is_hang_and_float
# Public func to get wall_tiles
func get_wall_tiles():
	return wall_tiles
"

[sub_resource type="CircleShape2D" id="CircleShape2D_xp8qv"]

[node name="Player" type="CharacterBody2D"]
light_mask = 0
z_index = 3
position = Vector2(74, 74)
script = SubResource("GDScript_bf3k3")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
scale = Vector2(2.04, 2.04)
shape = SubResource("CircleShape2D_xp8qv")
debug_color = Color(0.87451, 0, 0.843137, 0.419608)

[node name="Sprite2D" type="Sprite2D" parent="."]
z_index = 3
z_as_relative = false
scale = Vector2(0.203125, 0.195312)
texture = ExtResource("1_jnqgf")
flip_h = true

[node name="ShipGlowLight" type="PointLight2D" parent="."]
position = Vector2(-12, 7)
scale = Vector2(4, 4)
color = Color(0.87451, 0.792157, 0.254902, 1)
energy = 2.0
shadow_enabled = true
shadow_filter = 2
shadow_filter_smooth = 22.8
texture = ExtResource("2_i2o11")
